<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  
    "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
   
<mapper namespace="com.fh.shop.mapper.user.IUserMapper">

	<sql id="userwhere">
		<where>
			<if test="userName != null and userName !=''">
				and userName like  "%"#{userName}"%"
			</if>
			<if test="realName != null and realName !=''">
				and realName  like "%"#{realName}"%"
			</if>
			<if test="minDate != null ">
				and entryTime >=  #{minDate}
			</if>
			<if test="maxDate !=null and maxDate>=minDate">
				and entryTime &lt;=  #{maxDate}
			</if>
			<if test="minPrice != null and minPrice >=0">
				and pay >=  #{minPrice}
			</if>
			<if test="maxPrice!=null and maxPrice>=minPrice">
				and pay &lt;=  #{maxPrice}
			</if>
			<if test="minAge != null and minAge >=0">
				and age >=  #{minAge}
			</if>
			<if test="maxAge !=null and maxAge>=minAge">
				and age &lt;=  #{maxAge}
			</if>
			<if test="size>0">
				and id  in (
				select userid from t_user_role where

				roleid in
				<foreach collection="idsList" item="list" open="(" close=")" separator=",">
					#{list}
				</foreach>

				group by userid
				having count(*)=#{size}
				)
			</if>
		</where>

	</sql>
	<insert id="addUser" parameterType="com.fh.shop.po.user.User">
		<selectKey keyProperty="id" resultType="long" order="AFTER">
			select last_insert_id();
		</selectKey>
		insert into t_user (username,realname,password,age,sex,phone,email,pay,entryTime,photo,salt) values (#{userName},#{realName},#{password},#{age},#{sex},#{phone},#{email},#{pay},#{entryTime},#{photo},#{salt})
	</insert>

	<select id="findList" resultType="com.fh.shop.po.user.User">
		SELECT t.* from (
		select id,username,realname,age,sex,phone,email,pay,entryTime,photo,errorCount,errorTime from t_user
		 <include refid="userwhere"></include>
		 order by id desc
		)t
		limit #{start},#{length}
	</select>

	<select id="findCount" resultType="java.lang.Long">
		select count(*) from t_user
		<include refid="userwhere"></include>
 	</select>

	<delete id="deleteById" >
		delete from t_user where id=#{id}
	</delete>

	<select id="queryById" resultType="com.fh.shop.po.user.User">
		select id,username,realname,password,age,sex,phone,email,pay,entryTime,photo,salt  from t_user where id =#{id}
	</select>

	<insert id="addUserRole" >
		insert into t_user_role (userid,roleid) values (#{userId},#{roleId})
	</insert>

	<update id="updateUser" >
		update t_user set
		<if test = "userName != null and userName!='' ">
			userName=#{userName},
		</if>

		<if test = "photo != null and photo !='' ">
			photo=#{photo},
		</if>
		<if test = "phone != null and phone !='' ">
			phone=#{phone},
		</if>
		<if test = "email != null and email !='' ">
			email=#{email},
		</if>
		<if test = " sex !=null ">
			sex=#{sex},
		</if>
		<if test = "age != null and age !='' ">
			age=#{age},
		</if>
		<if test = "pay != null and pay !='' ">
			pay=#{pay},
		</if>
		<if test = "entryTime != null and entryTime !='' ">
			entryTime=#{entryTime},
		</if>
		<if test = "realName != null and realName !='' ">
			realName=#{realName}
		</if>


		where id=#{id}
	</update>

	<select id="findRoleNames" resultType="string">
		select roleName from t_role r left join  t_user_role ur on r.id=ur.roleId
		where ur.userId=#{id}
	</select>
	<select id="findRoleId" resultType="int">
		select roleId from t_user_role where userId=#{v}
	</select>

	<delete id="deleteRoleId">
		delete from t_user_role where userId=#{id}
	</delete>

	<delete id="deleteRoleIds">
		delete from t_user_role where userId in
		<foreach collection="list" item="list" open="(" close=")" separator=",">
			#{list}
		</foreach>
	</delete>


	<delete id="deleteIds">
		delete from t_user where id in
		<foreach collection="list" item="list" open="(" close=")" separator=",">
		#{list}
	</foreach>
	</delete>

	<!-- 登录-->
	<select id="findByName" resultType="com.fh.shop.po.user.User">
		select id,username,salt,realname,password,age,sex,phone,email,pay,entryTime,photo,loginTime,loginCount,errorCount,errorTime
		 from t_user
		 where userName=#{userName}
	</select>

	<update id="addLoginTime">
		update t_user set loginTime=now(),loginCount=#{loginCount},errorCount=#{errorCount} where id=#{id}
	</update>

	<!--更新密码错误信息-->
	<update id="updateError">
		update t_user set errorTime=now(),errorCount=#{errorCount} where id=#{id}
	</update>


	<!--修改密码-->
	<update id="updatePassword">
		update  t_user set password =#{newPassword}  where id=#{userId}
	</update>
	<!--解除用户锁定-->
	<update id="updateLock">
		update t_user set errorCount = 0 where id =#{id}
	</update>

	<!--邮箱找回密码-->
	<select id="findEmail" resultType="com.fh.shop.po.user.User">
		select email from t_user where email =#{email}
	</select>

	<!--邮箱找回密码-->
	<update id="updatePasswordByEmail">
		update t_user set password=#{password},salt=#{salt} where email =#{email}
	</update>

	<!--重置密码-->
	<update id="updatePasswordById">
		update t_user set password=#{password} where id =#{id}
	</update>

</mapper>